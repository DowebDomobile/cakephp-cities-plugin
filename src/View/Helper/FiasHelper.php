<?php
namespace Dwdm\Cities\View\Helper;

use Cake\View\Helper;
use Cake\View\View;
use Dwdm\Cities\Model\Entity\Fias;

/**
 * Fias helper
 */
class FiasHelper extends Helper
{
    public $begin = [
        'м' => 'м.',
        'гп' => 'гп.',
        'рп' => 'рп.',
        'Респ' => 'республика',
        'у' => 'у.',
        'пгт' => 'пгт.',
        'починок' => 'починок',
        'ст' => 'ст.',
        'кордон' => 'кордон',
        'п' => 'п.',
        'заимка' => 'заимка',
        'п/р' => 'п/р.',
        'ст-ца' => 'станица',
        'лпх' => 'лпх',
        'остров' => 'остров',
        'жилзона' => 'жилзона',
        'п/ст' => 'п/ст',
        'ж/д_пост' => 'ж/д пост',
        'погост' => 'погост',
        'Чувашия' => 'Чувашия',
        'с/с' => 'с/с',
        'казарма' => 'казарма',
        'ж/д_рзд' => 'ж/д рзд',
        'снт' => 'снт',
        'аул' => 'аул',
        'с' => 'с.',
        'нп' => 'нп.',
        'высел' => 'высел',
        'п/о' => 'п/о',
        'сл' => 'сл.',
        'с/п' => 'с/п',
        'ж/д_будка' => 'ж/д будка',
        'с/мо' => 'с/мо',
        'г.' => 'г.',
        'аал' => 'аал',
        'дп' => 'дп.',
        'городок' => 'городок',
        'х' => 'х.',
        'мкр' => 'микрорайон',
        'промзона' => 'промзона',
        'с/о' => 'с/о',
        'ж/д_оп' => 'ж/д оп',
        'д' => 'д.',
        'кп' => 'кп',
        'г' => 'г.',
        'кв-л' => 'кв-л',
        'с/а' => 'с/а',
        'ж/д_ст' => 'ж/д станция',
        'ж/д_казарм' => 'ж/д казарма',
        'жилрайон' => 'жилрайон',
        'ж/д_платф' => 'ж/д платформа',
        'г.о.' => 'г.о.',
        'арбан' => 'арбан',
    ];

    public $end = [
        'рзд' => 'рзд',
        'АО' => 'АО',
        'р-н' => 'район',
        'край' => 'край',
        'Аобл' => 'АО',
        'обл' => 'область',
    ];

    /**
     * Default configuration.
     *
     * @var array
     */
    protected $_defaultConfig = [];

    public function format(Fias $fias)
    {
        return implode(', ', array_merge([$this->place($fias->short, $fias->name)],
            ($fias->has('area') ? [$this->place($fias->area->short, $fias->area->name)] : []),
            ($fias->has('region') ? [$this->place($fias->region->short, $fias->region->name)] : [])));
    }

    private function place($short, $name)
    {
        if (key_exists($short, $this->end)) {
            return "{$name} {$this->end[$short]}";
        }

        return "{$this->begin[$short]} {$name}";
    }
}